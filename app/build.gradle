apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.dasu.basemodule"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "boolean", "IS_PRINT_FRESCO_LOG", "false"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    def assertDir = sourceSets.main.assets.srcDirs[0]
    applicationVariants.all { variant ->
        variant.mergeAssets.dependsOn {
            tasks.create(name: "generate${variant.name.capitalize()}BuildProperties") {
                doFirst {
                    if (!file(assertDir).exists()) {
                        file(assertDir).mkdirs()
                    }
                    def config = "";
                    def fileName = "${assertDir}/build.properties"
                    if (file(fileName).exists()) {
                        file(fileName).delete();
                    }
                    android.defaultConfig.buildConfigFields.each { field ->
                        config += field.key + "=" + field.value.value.replaceAll("\"", "")
                        config += "\n"
                    }
                    variant.productFlavors.each {
                        if (it.name.equals(variant.flavorName)) {
                            variant.buildType.buildConfigFields.each { field ->
                                config += field.key + "=" + field.value.value.replaceAll("\"", "")
                                config += "\n"
                            }
                            it.buildConfigFields.each { field ->
                                config += field.key + "=" + field.value.value.replaceAll("\"", "")
                                config += "\n"
                            }
                        }
                    }
                    println "=======BuildConfigFields======="
                    println config
                    file(fileName).withPrintWriter { printWriter ->
                        printWriter.println(config)
                    }
                }
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':update')
    compile project(':crash')
    compile project(':log')
    compile project(':ftp')
    compile project(':utils')
    compile project(':blur')
    compile project(':fresco')
    compile project(':volley')
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha7'
    compile 'com.jakewharton:butterknife:5.1.1'
    compile 'com.facebook.fresco:fresco:0.14.1'
    compile 'com.github.bumptech.glide:glide:4.8.0'
    testCompile 'junit:junit:4.12'
}
